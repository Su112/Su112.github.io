<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>粒子层叠、消息推送</title>
      <link href="/2019/11/14/11.17/"/>
      <url>/2019/11/14/11.17/</url>
      
        <content type="html"><![CDATA[<h5 id="Unity3d-UGUI-粒子效果层叠解决方案"><a href="#Unity3d-UGUI-粒子效果层叠解决方案" class="headerlink" title="Unity3d UGUI 粒子效果层叠解决方案"></a>Unity3d UGUI 粒子效果层叠解决方案</h5><ul><li>可以直接在覆盖层上加个canvas，改变sort让它大于粒子的排序就可以</li><li>renderQueue的方法来解决粒子和UI层叠的问题,<a href="https://blog.csdn.net/A13155283231/article/details/87987901" target="_blank" rel="noopener">参考</a></li></ul><h5 id="untiy中消息推送的三个函数"><a href="#untiy中消息推送的三个函数" class="headerlink" title="untiy中消息推送的三个函数"></a>untiy中消息推送的三个函数</h5><ul><li><a href="https://blog.csdn.net/qq_39741605/article/details/80855880" target="_blank" rel="noopener">参考博客</a></li><li>耗资源，优先考虑其他的实现方法，比如delegate</li></ul><h5 id="关于awake和start获得数据"><a href="#关于awake和start获得数据" class="headerlink" title="关于awake和start获得数据"></a>关于awake和start获得数据</h5><ul><li>如果只是获得本身数据可以写在awake,获得其他对象数据的工作在start中做</li></ul><hr>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019</title>
      <link href="/2019/11/14/2019%20%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
      <url>/2019/11/14/2019%20%E5%B9%B4%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>###每天往前挪一点小计划<br>还是需要个小计划，不然满怀热血搭建的blog可能就半途拉闸了</p><ul><li>每天在本地写个今日总结</li><li>将每周学习到的新知识更新到GitHub</li><li></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
